@model HealthDiseasePrediction.Models.UserModel

@{
    ViewBag.Title = "DS";
}

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()
    <div class="form-horizontal">
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })

        <div class="form-group">
        
            @{
                    List<SelectListItem> MySelectBox = HealthDiseasePrediction.Models.Converter.ConvertData();
            }


            @Html.LabelFor(model => model.IdChestPainType, "Select Type of your Disease", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownListFor(model => model.IdChestPainType, MySelectBox, "Select Type of your Disease", htmlAttributes: new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.IdChestPainType, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(model => model.MaxHeartRateAchived, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.MaxHeartRateAchived, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.MaxHeartRateAchived, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(model => model.Oldpeak, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Oldpeak, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Oldpeak, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(model => model.predictedValue, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.predictedValue, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.predictedValue, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Predict" class="btn btn-default" />
                <input type="submit" value="Predict" class="btn btn-default" onclick="Predict()" />
            </div>
        </div>
    </div>
}


<div>
    @Html.ActionLink("Back to List", "index")
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}

<div class="RightWindow">
    @{

        List<SelectListItem> WSB = HealthDiseasePrediction.Models.Converter.ConvertData();
    }
    @Html.LabelFor(model => model.IdChestPainType, "Ustawienie Kontenera Test")
    @Html.DropDownListFor(model => model.IdChestPainType, WSB, "Select Type of your Disease", new { htmlAttributes = new { @class = "form-control" } })
</div>

@Styles.Render("~/content/HDPStyle.css ")